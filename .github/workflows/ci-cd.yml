name: CI/CD Pipeline

on:
  push:
    branches:
      - dev  # Adjust to your main branch name
  pull_request:
    branches:
      - dev

jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in GitHub Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      env:
        IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/videogen-app:${{ github.sha }}
      run: |
        docker compose build
        docker compose push
    

  deploy:
    needs: docker-build
    runs-on: ubuntu-latest
    environment: production
    steps:
    # Example of deployment step: SSH into server and deploy
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.6
      env:
        PROJECT_NAME: "videogen"
        DOMAIN: "media.pixiee.io"
        FAL_KEY: ${{ secrets.FAL_KEY }}
        MONGO_URI: ${{ secrets.MONGO_URI }}
        REDIS_URI: ${{ secrets.REDIS_URI }}
        USSO_REFRESH_TOKEN: ${{ secrets.USSO_REFRESH_TOKEN }}
        USSO_REFRESH_URL: "https://sso.pixiee.io/auth/refresh"
        USSO_JWT_CONFIG: ${{ secrets.USSO_JWT_CONFIG }}
        IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/videogen-app:${{ github.sha }}
      with:       
        host: ${{ secrets.DEPLOY_SERVER }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        envs:  PROJECT_NAME, DOMAIN, FAL_KEY, MONGO_URI, REDIS_URI, USSO_REFRESH_TOKEN, USSO_REFRESH_URL, USSO_JWT_CONFIG, TASK_UPDATE_TIME, IMAGE_NAME
        script: |
          cd videogen
          git pull
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          docker compose pull
          echo $IMAGE_NAME
          docker compose up -d 
